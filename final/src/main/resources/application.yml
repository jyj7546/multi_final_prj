spring:
 application:
  name: final
 resources:
  static-location: /static/
 mvc:  # jsp 파일 경로 강제 설정. 권장 X, templates 경로 사용 (with 타임리프 권장)
  view:
   prefix: /WEB-INF/views/
   suffix: .jsp
 datasource: # DB 정보 설정
  # url: jdbc:mysql://localhost:3306/finalprojectdb?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
  url: jdbc:log4jdbc:mysql://localhost:3306/finalprojectdb?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false # for log4jdbc 쿼리 로그
  username: fullstack  # 로컬 DB USER명
  password: fullstack  # 로컬 DB PASSWORD명
  # driver-class-name: com.mysql.cj.jdbc.Driver
  driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy  # for log4jdbc 쿼리 로그
  connection-test-query: SELECT NOW() FROM dual # for log4jdbc 쿼리 로그
  # hikari: # log4jdbc 쿼리 테이블형식 로깅 설정
  #  driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
  #  jdbc-url: jdbc:log4jdbc:mysql://localhost:3306/finalprojectdb?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
  #  username: fullstack  # 로컬 DB USER명
  #  password: fullstack  # 로컬 DB PASSWORD명
  #  connection-test-query: SELECT NOW() FROM dual
 devtools:
  restart:
   enabled: true
# 배치 관련 설정
 batch:
  job:
   enabled: true
  jdbc:
   initialize-schema: always
# 쿼츠 관련 설정
 quartz:
  job-store-type: jdbc
  jdbc:
   initialize-schema: always # 스프링 쿼츠 메타데이터 테이블 자동생성 옵션 (한 번만 하고 never로 변경하기) /
   schema: classpath:quartz-create.sql # always옵션 주고, IF NOT EXIST 쿼리로 쿼츠 메타데이터 테이블 생성
  properties:
   org:
    quartz:
     threadPool:
      threadCount: 5 # 스레드 풀의 크기 (스프링부트 쿼츠 권장 5) => 동시 작업 수행 가능 갯수
     jobStore:
      driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
      tablePrefix: QRTZ_
      misfireThreshold: 1000 # 불발 감지 시간을 5초(기본 60초)로 제한

# 포트 설정
server:
 port: 8080
  
# mybatis 추가설정
mybatis:
  configuration:
    default-statement-timeout: 20 # 쿼리 실행 타임아웃 20초로 제한
    multiple-result-sets-enabled: false # 다중 행 결과 리턴 금지 (무결성 에러 체크 힘들어짐 조금이나마 방지)
    map-underscore-to-camel-case: true # DB 컬럼명(소문자스네이크케이스) - 자바 변수명(카멜케이스) 자동 매핑
    call-setters-on-nulls: true # NULL값 setter에 전달 가능 (defualt: false)
    # jdbc-type-for-null: varchar # NULL값 DB에 저장시, "NULL" 이라는 varchar 형태로 저장 NOT NULL 컬럼 insert 실패 방지 ###### mysql auto_pk trigger 추가로 인해 주석처리함 (PK를 NULL로 저장해야 됨)
    default-fetch-size: 0 # 한 번에 가져올 최대 행 수 제한 (default: 0)
  # config-location: classpath:mybatis/mybatis-config.xml # mybatis 설정파일 경로 지정
  mapper-locations: classpath:/mapper/*-mapper.xml
  type-aliases-package: com.example.demo.dto # dto 패키지 별칭 자동 지정(ex. **/MemberDTO => MemberDTO)
  
# 기본 로깅 레벨 설정 => classpath:/logback-spring.xml 로 대체
logging:
  config: classpath:logback-spring.xml
# logging:
#   level:
#     root: INFO
#     # 패키지별 로깅 레벨 설정
#     org:
#       apache:
#         ibatis: INFO
#       mybatis: INFO
#     com:
#       example:
#        demo: INFO
#       zaxxer:
#         hikari: INFO
#     javax:
#       sql:
#         DataSource: OFF
#     jdbc: # 쿼리 로그 설정
#       audit: OFF # JDBC 트러블슈팅 경우를 제외하고는 사용 권장 X
#       resultset: OFF # ResultSet을 포함한 모든 JDBC 호출 정보를 출력
#       resultsettable: INFO  # SQL 결과 데이터 Table형식으로 출력
#       sqlonly: OFF     # SQL 로그만 출력
#       sqltiming: INFO    # SQL + 소요시간 출력
#       connection : OFF  # 커넥션 연결/종료 정보 출력
      
# 크롬드라이버 경로 => WebDriverManager 라이브러리 사용하여 자동다운로드하는걸로 변경
# webdriver-path:
#  chrome: /driver/chromedriver.exe

# 세션 KEY 고정 String 값
session-key:
 member-id: SESSION_MEMBER_ID